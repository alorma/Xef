apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

def cfg = rootProject.ext.configuration;
def libs = rootProject.ext.libraries;

android {
  compileSdkVersion cfg.compileVersion
  buildToolsVersion cfg.buildToolsVersion

  defaultConfig {
    minSdkVersion cfg.minSdk
    applicationId "com.alorma.intendencia"
    targetSdkVersion cfg.targetSdk
    versionCode cfg.version_code
    versionName cfg.version_name
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }

  lintOptions {
    abortOnError false;
    disable 'InvalidPackage' // Some libraries have issues with this
    disable 'OldTargetApi' // Due to Robolectric that modifies the manifest when running tests
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    debug {
      applicationIdSuffix '.debug'
    }
  }
}

dependencies {
  compile project(':data')

  compile "com.android.support:appcompat-v7:${libs.supportVersion}"
  compile "com.android.support:recyclerview-v7:${libs.supportVersion}"
  compile "com.android.support:design:${libs.supportVersion}"
  compile "com.android.support:cardview-v7:${libs.supportVersion}"
  compile "com.jakewharton:butterknife:${libs.butterknife}"

  apt "com.google.dagger:dagger-compiler:${libs.dagger}"
  compile "com.google.dagger:dagger:${libs.dagger}"

  compile "io.reactivex:rxjava:${libs.rxjava}"
  compile "io.reactivex:rxandroid:${libs.rxandroid}"

  provided "org.glassfish:javax.annotation:${libs.javax_annotation}"

  compile "se.emilsjolander:intentbuilder-api:${libs.intentBuidler}"
  apt "se.emilsjolander:intentbuilder-compiler:${libs.intentBuidler}"

  compile("com.mikepenz:materialize:${libs.materialize}") {
    transitive = true
  }
}
